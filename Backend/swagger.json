{
  "swagger": "2.0",
  "info": {
    "title": "User Authentication, Password Reset, and Audio Transcription API",
    "description": "API for user authentication, password reset, admin user management, and audio transcription.",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/signup": {
      "post": {
        "summary": "Sign up a new user",
        "description": "Creates a new user. If the email belongs to 'admin.com', the user will be created as an admin.",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "Email of the new user",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User registered successfully"
                }
              }
            }
          },
          "400": {
            "description": "User already exists",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User already exists"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "An error occurred. Please try again."
                }
              }
            }
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "summary": "Login a user",
        "description": "Logs in a user and returns a JWT token.",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "Email of the user",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Login successful"
                },
                "admin": {
                  "type": "string",
                  "example": "True"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid credentials"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "An error occurred. Please try again."
                }
              }
            }
          }
        }
      }
    },
    "/api/user": {
      "get": {
        "summary": "Get user details",
        "description": "Get the logged-in user's details based on the JWT token.",
        "responses": {
          "200": {
            "description": "User details fetched successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "user@example.com"
                    },
                    "isAdmin": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No user logged in",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "No user logged in"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users": {
      "get": {
        "summary": "Get list of all users (Admin only)",
        "description": "Fetches a list of all users. Only accessible by admins.",
        "responses": {
          "200": {
            "description": "Users fetched successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "example": "user@example.com"
                      },
                      "isAdmin": {
                        "type": "boolean",
                        "example": false
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, only admin users allowed",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Forbidden: Only admin users can access this route"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "An error occurred. Please try again."
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/delete/{id}": {
      "delete": {
        "summary": "Delete user (Admin only)",
        "description": "Deletes a user. Only accessible by admins.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to delete",
            "required": true,
            "type": "string",
            "example": "60b9c7bc0f1b2b34b0f8e1cd"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "User deleted successfully"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, only admin users allowed",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Forbidden: Only admin users can access this route"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "An error occurred. Please try again."
                }
              }
            }
          }
        }
      }
    },
    "/api/forgot": {
      "post": {
        "summary": "Send a password reset email",
        "description": "Sends a password reset link to the user's email if the email exists in the database.",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "Email of the user who requested password reset",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user@example.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password reset email sent successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Email sent"
                }
              }
            }
          },
          "400": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "No user found"
                }
              }
            }
          },
          "401": {
            "description": "Error sending email",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Failed to send email"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "An error occurred. Please try again."
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "user@example.com"
        },
        "password": {
          "type": "string",
          "example": "hashedpassword123"
        },
        "isAdmin": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "ResetToken": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "user@example.com"
        },
        "token": {
          "type": "string",
          "example": "abcdef12345"
        },
        "expiry": {
          "type": "integer",
          "example": 1640995200000
        }
      }
    }
  }
}
